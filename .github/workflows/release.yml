name: release

# RunEntity the workflow when a Pull Request is opened or when changes are pushed to master
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # RunEntity the steps below with the following versions of Node.js
        node-version: [ 14.x ]
        python-version: [ 3.8 ]

    steps:
      # Fetch the latest commit
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js using the appropriate version
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      #Setup python and pipenv
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pipenv
        run: pip install pipenv

      # Set yarn version
      - name: Set up yarn
        run: yarn set version 3.x

      # Build auto-nlp-shared-js
      - name: Build auto-nlp-shared-js
        working-directory: ./packages/auto-nlp-shared-js
        run: |
          pwd
          yarn run build
          yalc publish 
          cd ../auto-nlp-core
          yalc add auto-nlp-shared-js
          cd ../auto-nlp-ui 
          yalc add auto-nlp-shared-js
        

      # Install package dependencies
      - name: Install
        run: yarn install --immutable

      # RunEntity tests
      - name: Test
        run: yarn workspaces foreach run test # TODO: There might be an "intelligent" solution to run tests for changed+change-affected workspaces

  release:
    # Only release on push to master
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      # Fetch the latest commit
      - name: Checkout
        uses: actions/checkout@v2

      # Setup Node.js using the appropriate version
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      #Setup python and pipenv
      - name: Set up Python and Pipenv
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Pipenv
        run: pip install pipenv

      - name: Install
        run: yarn install --immutable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_RW }}

      - name: Release
        run: yarn workspaces foreach run semantic-release -e semantic-release-monorepo # TODO: There might be an "intelligent" solution to run only release for changed workspaces... are race-conditions a concern?
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
